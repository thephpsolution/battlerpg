{% extends "::layout.html.twig" %}
{% block additional_javascripts %}

    <script type="text/javascript" src="{{ asset('assets/vendor/iviewer/jquery.iviewer.min.js') }}" ></script>
    <script type="text/javascript" src="{{ asset('assets/jquery-canvas-area-draw/jquery.canvasAreaDraw.js') }}" ></script>

    <script type="text/javascript">
        jQuery(function($){

            var viewer, app;

            function isInCircle(x, y) {
                var relative_x = x - this.x;
                var relative_y = y - this.y;
                return Math.sqrt(relative_x*relative_x + relative_y*relative_y) <= this.r;
            }

            function isInRectangle(x, y) {
                return (this.x1 <= x && x <= this.x2) && (this.y1 <= y && y<= this.y2);
            }

            function getCircleCenter() { return {x: this.x, y: this.y}; }

            function getRectangleCenter() { return {x: (this.x2+this.x1)/2, y: (this.y2+this.y1)/2}; }

            var objects = [
                {x: 100, y: 100, r: 50, isInObject: isInCircle, title: 'big circle', getCenter: getCircleCenter },
                {x: 150, y: 250, r: 35, isInObject: isInCircle, title: 'middle circle', getCenter: getCircleCenter },
                {x: 500, y: 300, r: 10, isInObject: isInCircle, title: 'small circle', getCenter: getCircleCenter },
                {x1: 200, y1: 400, x2: 300, y2: 500, isInObject: isInRectangle, title: 'rectangle', getCenter: getRectangleCenter }
            ]

            function whereIam(x, y) {
                for (var i=0; i<objects.length; i++) {
                    var obj = objects[i];
                    if (obj.isInObject(x, y))
                        return obj;
                }

                return null;
            }

            function showMe(ev, a) {
                $.each(objects, function(i, object) {
                    if (object.title == $(a).html()) {
                        var center = object.getCenter();
                        var offset = viewer.iviewer('imageToContainer', center.x, center.y);
                        var containerOffset = viewer.iviewer('getContainerOffset');
                        var pointer = $('#pointer');
                        offset.x += containerOffset.left - 20;
                        offset.y += containerOffset.top - 40;
                        pointer.css('display', 'block');
                        pointer.css('left', offset.x+'px');
                        pointer.css('top', offset.y+'px');
                    }
                });

                ev.preventDefault();
            }

            window.showMe = showMe;

            viewer = $("#viewer1").iviewer({
                src: "/bundles/app/map.jpg",
                zoom: 125,

                onClick: function(ev, coords) {
                    console.log('Mark mountain at ' + coords.x + ", " + coords.y);
                    var object = whereIam(coords.x, coords.y);

                    if (object)
                        alert('Clicked at ('+coords.x+', '+coords.y+'). This is '+object.title);
                },

                onMouseMove: function(ev, coords) {
                    var object = whereIam(coords.x, coords.y);

                    if (object) {
                        $('#status').html('You are in ('+coords.x.toFixed(1)+', '+coords.y.toFixed(1)+'). This is '+object.title);
                        this.container.css('cursor', 'crosshair');
                    } else {
                        $('#status').html('You are in ('+coords.x.toFixed(1)+', '+coords.y.toFixed(1)+'). This is empty space');
                        this.container.css('cursor', null);
                    }
                },

                onBeforeDrag: function(ev, coords) {
                    // remove pointer if image is getting moving
                    // because it's not actual anymore
                    $('#pointer').css('display', 'none');
                    // forbid dragging when cursor is whithin the object
                    return whereIam(coords.x, coords.y) ? false : true;
                },

                onZoom: function(ev) {
                    // remove pointer if image is resizing
                    // because it's not actual anymore
                    $('#pointer').css('display', 'none');
                },

                initCallback: function(ev) {
                    this.container.context.iviewer = this;
                }
            });
        });

        var app = {};
        $(document).ready(function() {

            $('#mark_mountains').change(function() {
                app.mode = 'mark_mountains';
            });
        });
    </script>
{% endblock %}

{% block additional_stylesheets %}
    <link rel="stylesheet" href="{{ asset('assets/vendor/iviewer/jquery.iviewer.css') }}" />
    <style>
        html, body {
            height: 100%;
            padding: 0;
            margin: 0;
        }

        .viewer
        {
            height: 100%;
            position: relative;
            background-color: lightgreen;
        }

        .wrapper
        {
            border: 1px solid black;

            position: absolute;
            top: 5em;
            left: 1em;
            bottom: 1em;
            right: 1em;

            overflow: hidden; /*for opera*/
        }

        .toolbar
        {
            border: 1px solid black;

            position: absolute;
            top: 1em;
            left: 1em;
            right: 1em;
            height: 3em;
        }

        #pointer
        {
            background-image: url('{{ asset('bundles/app/arrow.png') }}');
            width: 40px;
            height: 40px;
            position: absolute;
            display: none;
        }

    </style>
    <link href="{{ asset('assets/vendor/font-awesome/css/font-awesome.min.css') }}" rel="stylesheet" />
{% endblock %}

{% block body %}
    <div id="main" class="container">
        <h1>Image Maps Canvas Drawing</h1>
        <form>
            <div class="row">
                <div class="span6">
                    <h2> Image 1 </h2>
      <textarea rows=3 name="coords1" class="canvas-area input-xxlarge" disabled
                placeholder="Shape Coordinates"
                data-image-url="{{ asset('bundles/app/map.jpg') }}"></textarea>
                </div>
            </div>
        </form>
    </div>

{#<div style="float: right;">#}
    {#<div class="btn-group" data-toggle="buttons">#}
        {#<label class="btn btn-primary">#}
            {#<input type="radio" name="options" id="mark_mountains" autocomplete="off" /> Mark Mountains#}
        {#</label>#}
        {#<label class="btn btn-primary">#}
            {#<input type="radio" name="options" id="mark_trees" autocomplete="off"> Mark Trees#}
        {#</label>#}
        {#<label class="btn btn-primary">#}
            {#<input type="radio" name="options" id="mark_water" autocomplete="off"> Mark Water#}
        {#</label>#}
    {#</div>#}
{#</div>#}

{#&#123;&#35;<div class="toolbar">&#35;&#125;#}
    {#&#123;&#35;<span id="status"></span>|Show me:&#35;&#125;#}
    {#&#123;&#35;<a href="#" onclick="showMe(event, this)">big circle</a>,&#35;&#125;#}
    {#&#123;&#35;<a href="#" onclick="showMe(event, this)">middle circle</a>,&#35;&#125;#}
    {#&#123;&#35;<a href="#" onclick="showMe(event, this)">small circle</a>,&#35;&#125;#}
    {#&#123;&#35;<a href="#" onclick="showMe(event, this)">rectangle</a>&#35;&#125;#}
{#&#123;&#35;</div>&#35;&#125;#}

{#<div class="wrapper">#}
    {#<div id="viewer1" class="viewer"></div>#}
{#</div>#}

{#<div id="pointer"></div>#}
{% endblock %}
